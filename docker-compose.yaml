services:
  backend:
    build:
      context: ./PDFReportsGenerator
      dockerfile: ./src/PdfReportsGenerator.Gateway.Rest/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - APP_UID=1001
      - ASPNETCORE_ENVIRONMENT=Staging
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_started
      postgres:
        condition: service_started
    networks:
      - pdfreportsnetwork
  
  grpc:
    build:
      context: ./PDFReportsGenerator
      dockerfile: ./src/PdfReportsGenerator.Gateway.Grpc/Dockerfile
    ports:
      - "9080:8080"
      - "9081:8081"
    environment:
      - APP_UID=1002
      - ASPNETCORE_ENVIRONMENT=Staging
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_started
      postgres:
        condition: service_started
    networks:
      - pdfreportsnetwork

  frontend:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pdfreportsnetwork

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=PdfReportsGenerator
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pdfreportsnetwork

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - pdfreportsnetwork

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo > /dev/tcp/kafka/9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pdfreportsnetwork

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8091:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - pdfreportsnetwork

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - pdfreportsnetwork

volumes:
  postgres_data:
  minio_data:

networks:
  pdfreportsnetwork:
    driver: bridge